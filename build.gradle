//file:noinspection GroovyAssignabilityCheck
plugins {
    id "io.github.juuxel.loom-quiltflower-mini" version "1.+" apply false
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.10.0-SNAPSHOT" apply false
    id "maven-publish"
}

version = rootProject.mod_version + "+" + rootProject.mc_major_version + System.getenv().SNAPSHOT

/*dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${minecraft_version}+build.${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}+${mc_major_version}"

    modImplementation include("maven.modrinth:stonecutter_recipe_tags:${srt_version}")
}*/

// EMMA REMOVE ME BEFORE COMMITTING
idea { module {
    downloadJavadoc = false
    downloadSources = false
} }

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "io.github.juuxel.loom-quiltflower-mini"

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // We use Yarn as of right now, may move to Mojmap or more likely Quilt Mappings later.
        mappings "net.fabricmc:yarn:${rootProject.minecraft_version}+build.${rootProject.mappings_version}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version + "+" + rootProject.mc_major_version + System.getenv().SNAPSHOT

    tasks.withType(JavaCompile) { it.options.encoding = "UTF-8" }

    jar {
        from("LICENSE")
        exclude("**/upcoming/**")
        exclude("**/unused/**")
    }

    java { withSourcesJar() }
}
