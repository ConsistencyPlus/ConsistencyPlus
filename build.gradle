buildscript {
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.1.0-beta5'
    }
}

plugins {
    id "fabric-loom" version "0.8-SNAPSHOT"
    id "org.ajoberstar.grgit" version "4.1.0"
    id "java-library"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = "consistency_plus-${project.minecraft_version}"
version = "${project.mod_version}-${getVersionMetadata()}_UNMINIFIED"
def minVersion = "${project.mod_version}-${getVersionMetadata()}"

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) { it.options.encoding = "UTF-8" }


jar { from("LICENSE") { rename { "${it}_${project.archivesBaseName}" } } }

def getVersionMetadata() {
    def build_id = System.getenv("GITHUB_RUN_NUMBER")
    if (build_id != null) { return "build.${build_id}" }
    if (grgit != null) {
        def head = grgit.head()
        def id = head.abbreviatedId
        if (!grgit.status().clean) { id += "-dirty" }
        return "rev.${id}"
    }
    return "unknown"
}

apply from: "https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/utilities.gradle"

task('proguard', type: proguard.gradle.ProGuardTask) {
    configuration './proguard.conf'
    verbose
    injars project.buildDir.toString() + '/libs/' + archivesBaseName + "-" + version + ".jar"
    outjars project.buildDir.toString() + '/libs/' + archivesBaseName + "-" + minVersion + ".jar"
    keepparameternames
    renamesourcefileattribute 'SourceFile'
    keepattributes 'Signature,Exceptions,InnerClasses,PermittedSubclasses,EnclosingMethod,Deprecated,SourceFile,LineNumberTable'
    keepattributes '*Annotation*'

    keep 'public class * { \
        public protected *; \
    }'

    keepclassmembernames 'class * { \
        java.lang.Class class$(java.lang.String); \
        java.lang.Class class$(java.lang.String, boolean); \
    }'

    keepclassmembers 'class io.github.consistencyplus.consistency_plus.mixin.* { \
        <fields>; \
        <init>(); \
        <methods>; \
    }'
}

remapJar.finalizedBy proguard