apply from: "../gradle/loader.gradle"

architectury.forge()

configurations {
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.minecraft_version-$rootProject.forge_version"
    modApi "dev.architectury:architectury-forge:$rootProject.architectury_version"
    modCompileOnly "mcp.mobius.waila:wthit-api:forge-$rootProject.wthit_version" // compile against the WTHIT API
    modRuntimeOnly "mcp.mobius.waila:wthit:forge-$rootProject.wthit_version" // run against the full jar
    modApi "maven.modrinth:stonecutter_recipe_tags:$rootProject.scrt_version_forge-forge"
    modImplementation "lol.bai:badpackets:forge-${rootProject.badpackets_version}"

    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

sourceSets.main {
    resources {
        srcDirs += [
                'src/generated/resources'
        ]
    }
}

tasks.withType(processResources.class) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

loom {
    forge {
        dataGen{
            mod "consistency_plus"
        }

        launches {
            data {
                arg "--existing", file("src/main/resources").absolutePath
            }
        }

        mixinConfigs = [ "consistency_plus.mixins.json" ]
    }
}

publishing.publications {
    mavenForge(MavenPublication) from components.java
}
