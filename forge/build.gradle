apply from: "../gradle/loader.gradle"

architectury.forge()

configurations {
    developmentForge.extendsFrom common
}

dependencies {
    forge("net.minecraftforge:forge:$minecraft_version-$forge_version")

    modLocalRuntime("vazkii.patchouli:Patchouli:$patchouli_version")
   /* if (waila_fork == "jade")
        modLocalRuntime("maven.modrinth:jade:$jade_forge_version_id")*/
    modImplementation("dev.architectury:architectury-forge:$architectury_version")

    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

sourceSets.main {
    resources {
        srcDirs += [
                'src/generated/resources'
        ]
    }
}

tasks.withType(processResources.class) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

loom {
    forge {
        /*dataGen {
            mod "consistency_plus"
        }*/

        /*runs {
            data {
                vmArgs("--existing", file("src/main/resources").absolutePath)
            }
        }*/

        //mixinConfigs = [ "consistency_plus.mixins.json" ]
    }
}

publishing.publications {
    mavenForge(MavenPublication) from components.java
}
